filename = 'viptraffic.avi';
hvfr = vision.VideoFileReader(filename, ...
                              'ImageColorSpace', 'RGB');
hcsc = vision.ColorSpaceConverter('Conversion', 'RGB to intensity');
hof = vision.ForegroundDetector(...
        'NumTrainingFrames', 5, ...     
        'InitialVariance', (30/255)^2); 
hblob = vision.BlobAnalysis( ...
                    'CentroidOutputPort', false, ...
                    'AreaOutputPort', true, ...
                    'BoundingBoxOutputPort', true, ...
                    'OutputDataType', 'single', ...
                    'MinimumBlobAreaSource', 'Property', ...
                    'MinimumBlobArea', 250, ...
                    'MaximumBlobAreaSource', 'Property', ...
                    'MaximumBlobArea', 3600, ...
                    'MaximumCount', 80);
hshapeins1 = vision.ShapeInserter( ...
            'BorderColor', 'Custom', ...
            'CustomBorderColor', [0 255 0]);
hshapeins2 = vision.ShapeInserter( ...
            'Shape','Lines', ...
            'BorderColor', 'Custom', ...
            'CustomBorderColor', [255 255 0]);
htextins = vision.TextInserter( ...
        'Text', '%4d', ...
        'Location',  [1 1], ...
        'Color', [255 255 255], ...
        'FontSize', 12);
sz = get(0,'ScreenSize');
pos = [20 sz(4)-300 200 200];
hVideoOrig = vision.VideoPlayer('Name', 'Original', 'Position', pos);
pos(1) = pos(1)+220; 
hVideoFg = vision.VideoPlayer('Name', 'Foreground', 'Position', pos);
pos(1) = pos(1)+220;
hVideoRes = vision.VideoPlayer('Name', 'Results', 'Position', pos);
line_row = 23; 
while ~isDone(hvfr)
    image = step(hvfr);     
    y = step(hcsc, image);  
    y = im2single(y);
    y = y-mean(y(:)); 
    fg_image = step(hof, y);
    [area, bbox] = step(hblob, fg_image);
    image_out = image;
    image_out(22:23,:,:) = 255; 
    image_out(1:15,1:30,:) = 0;
    Idx = bbox(:,2) > line_row;
    ratio = zeros(length(Idx),1);
    ratio(Idx) = single(area(Idx,1))./single(bbox(Idx,3).*bbox(Idx,4));
    ratiob = ratio > 0.4;
    count = int32(sum(ratiob));  
    bbox(~ratiob,:) = int32(-1);
    image_out = step(hshapeins1, image_out, bbox);
    image_out = step(htextins, image_out, count);
    step(hVideoOrig, image);        
    step(hVideoFg,   fg_image);      
    step(hVideoRes,  image_out);      
end
release(hvfr);
